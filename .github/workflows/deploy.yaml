name: Deploy
on:
  push:
    # branches:
    #   - main
    #   - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive
      - name: Build image
        run: DOCKER_IMAGE_NAME="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" ./docker-build.sh
      - name: Log into the container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Apply tags to image
        run: |
          echo '${{ steps.meta.outputs.tags }}' | tr ',' '\n' | while read -r TAG; do
            echo $TAG
            docker image tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} $TAG
          done
      - name: Push the Docker image
        id: push
        run: |
          docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          DIGEST=$(docker images --no-trunc --quiet ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }})
          echo "[$DIGEST]"
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
